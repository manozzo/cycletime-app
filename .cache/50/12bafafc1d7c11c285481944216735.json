{"id":"../node_modules/statman/lib/registry.js","dependencies":[{"name":"C:\\Users\\Manozzo\\Documents\\Projects\\cycletime-app\\package.json","includedInParent":true,"mtime":1618282257069},{"name":"C:\\Users\\Manozzo\\Documents\\Projects\\cycletime-app\\node_modules\\statman\\package.json","includedInParent":true,"mtime":1618282256579},{"name":"lodash.isempty","loc":{"line":1,"column":24},"parent":"C:\\Users\\Manozzo\\Documents\\Projects\\cycletime-app\\node_modules\\statman\\lib\\registry.js","resolved":"C:\\Users\\Manozzo\\Documents\\Projects\\cycletime-app\\node_modules\\lodash.isempty\\index.js"},{"name":"lodash.isfunction","loc":{"line":2,"column":27},"parent":"C:\\Users\\Manozzo\\Documents\\Projects\\cycletime-app\\node_modules\\statman\\lib\\registry.js","resolved":"C:\\Users\\Manozzo\\Documents\\Projects\\cycletime-app\\node_modules\\lodash.isfunction\\index.js"}],"generated":{"js":"const isEmpty = require('lodash.isempty');\nconst isFunction = require('lodash.isfunction');\n\n//global collection of metrics.  Having this global makes it easy for other parts of application to access\nvar _metrics;\nreset();\n\nfunction reset() {\n    _metrics = new Map();\n}\n\nfunction register(key, metric) {\n    if (isEmpty(metric)) {\n        metric = key;\n        key = null;\n    }\n\n    key = determineKey(key, metric);\n    if (isEmpty(key)) {\n        throw Error('Cannot register a metric without a key.  Key can be specified as a parameter, or supplied in the metric as name, name(), or getName()');\n    }\n\n    _metrics.set(key, metric);\n    return metric;\n\n\n    function determineKey(key, metric) {\n        if (isEmpty(key)) {\n            if (isFunction(metric.name)) {\n                key = metric.name();\n            }\n            else if (isFunction(metric.getName)) {\n                key = metric.getName();\n            }\n            else if (metric.name) {\n                key = metric.name;\n            }\n        }\n        return key;\n    }\n}\n\nfunction findOrCreate(metricname, constructor) {\n    var existingMetric;\n    if (metricname) {\n        existingMetric = get(metricname);\n    }\n\n    if (isEmpty(existingMetric)) {\n        var newMetric = new constructor(metricname);\n        return register(newMetric);\n    } else {\n        return existingMetric;\n    }\n    return existingMetric;\n}\n\n// if metricname is provided, will return single metric\n// if metricname is NOT provided, will return array of all metrics\nfunction get(metricname) {\n    if (metricname) {\n        return _metrics.get(metricname);\n    } else {\n        return Array.from(_metrics.values());\n    }\n}\n\nmodule.exports.get = get;\nmodule.exports.register = register;\nmodule.exports.reset = reset;\nmodule.exports.findOrCreate = findOrCreate;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/statman/lib/registry.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/statman/lib/registry.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}}],"sources":{"../node_modules/statman/lib/registry.js":"const isEmpty = require('lodash.isempty');\nconst isFunction = require('lodash.isfunction');\n\n//global collection of metrics.  Having this global makes it easy for other parts of application to access\nvar _metrics;\nreset();\n\nfunction reset() {\n    _metrics = new Map();\n}\n\nfunction register(key, metric) {\n    if (isEmpty(metric)) {\n        metric = key;\n        key = null;\n    }\n\n    key = determineKey(key, metric);\n    if (isEmpty(key)) {\n        throw Error('Cannot register a metric without a key.  Key can be specified as a parameter, or supplied in the metric as name, name(), or getName()');\n    }\n\n    _metrics.set(key, metric);\n    return metric;\n\n\n    function determineKey(key, metric) {\n        if (isEmpty(key)) {\n            if (isFunction(metric.name)) {\n                key = metric.name();\n            }\n            else if (isFunction(metric.getName)) {\n                key = metric.getName();\n            }\n            else if (metric.name) {\n                key = metric.name;\n            }\n        }\n        return key;\n    }\n}\n\nfunction findOrCreate(metricname, constructor) {\n    var existingMetric;\n    if (metricname) {\n        existingMetric = get(metricname);\n    }\n\n    if (isEmpty(existingMetric)) {\n        var newMetric = new constructor(metricname);\n        return register(newMetric);\n    } else {\n        return existingMetric;\n    }\n    return existingMetric;\n}\n\n// if metricname is provided, will return single metric\n// if metricname is NOT provided, will return array of all metrics\nfunction get(metricname) {\n    if (metricname) {\n        return _metrics.get(metricname);\n    } else {\n        return Array.from(_metrics.values());\n    }\n}\n\nmodule.exports.get = get;\nmodule.exports.register = register;\nmodule.exports.reset = reset;\nmodule.exports.findOrCreate = findOrCreate;\n"},"lineCount":72}},"error":null,"hash":"beeb5652b97974cde4e59430c2e4196c","cacheData":{"env":{}}}